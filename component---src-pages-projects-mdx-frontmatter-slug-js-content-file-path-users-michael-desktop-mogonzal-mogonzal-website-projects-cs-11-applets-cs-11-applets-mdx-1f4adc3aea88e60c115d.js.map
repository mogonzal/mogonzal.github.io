{"version":3,"file":"component---src-pages-projects-mdx-frontmatter-slug-js-content-file-path-users-michael-desktop-mogonzal-mogonzal-website-projects-cs-11-applets-cs-11-applets-mdx-1f4adc3aea88e60c115d.js","mappings":"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","sources":["webpack://mogonzal-website/./src/components/messageencrypter.js","webpack://mogonzal-website/./src/components/minesweeper.js","webpack://mogonzal-website/./src/components/weatherreporter.js","webpack://mogonzal-website/./projects/cs11_applets/cs11_applets.mdx","webpack://mogonzal-website/./src/pages/projects/{mdx.frontmatter__slug}.js","webpack://mogonzal-website/./src/components/layout.js","webpack://mogonzal-website/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { shiftCipher, customCipher } from '../misc/utils';\n\nconst MessageEncrypter = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [cipherType, setCipherType] = useState(\"shift\");\n  const [key, setKey] = useState(1);\n  const [textSize, setTextSize] = useState(\"text-base\");\n  const [allCaps, setAllCaps] = useState(false);\n  const [result, setResult] = useState(\"\");\n\n  const handleChange = (event) => {\n    setInputText(event.target.value);\n  };\n\n  const handleEncrypt = () => {\n    let newResult = \"\";\n\n    if (cipherType === \"shift\") {\n      newResult = shiftCipher(inputText, key);\n    } else if (cipherType === \"custom\") {\n      newResult = customCipher(inputText);\n    }\n\n    setResult(newResult);\n  };\n\n  const handleReset = () => {\n    setInputText(\"\");\n    setResult(\"\");\n  };\n\n  const handleAllCaps = () => {\n    setAllCaps(!allCaps);\n  };\n\n  const handleFontSize = (event) => {\n    setTextSize(event.target.value);\n  };\n\n  return (\n    <div className=\"bg-gray-100 rounded-md shadow-md\">\n      <div className=\"container mx-auto\">\n        <header className=\"py-2 text-center\">\n          <h1 className=\"text-xl font-semibold\">\n            Message Encrypter\n          </h1>\n          <h2 className=\"text-sm\">\n            Translate any text message into a super-secret cipher!\n          </h2>\n        </header>\n        <hr />\n        <main className=\"flex flex-wrap justify-center mt-5\">\n          <div className=\"w-full sm:w-1/3 p-5\">\n            <fieldset>\n              <legend className=\"text-xl font-semibold\">Text to Encrypt</legend>\n              <textarea\n                id=\"input-text\"\n                placeholder=\"Enter your message to encrypted here\"\n                value={inputText}\n                onChange={handleChange}\n                className=\"w-full h-32 p-4 bg-gray-100 border-2 border-gray-400 focus:border-blue-500 resize-none outline-none\"\n              ></textarea>\n            </fieldset>\n          </div>\n          <div className=\"w-full sm:w-1/3 p-5\">\n            <fieldset>\n              <legend className=\"text-xl font-semibold\">\n                Encrypt Options\n              </legend>\n              <p className=\"mb-2\">\n                <strong className=\"mr-2\">Cipher Type:</strong>\n                <select\n                  id=\"cipher-type\"\n                  value={cipherType}\n                  onChange={(e) => setCipherType(e.target.value)}\n                  className=\"p-1\"\n                >\n                  <option value=\"shift\">Shift Cipher</option>\n                  <option value=\"custom\">Emoji Cipher</option>\n                </select>\n              </p>\n              <p className=\"mb-2\">\n                <strong className=\"mr-2\">Key:</strong>\n                <input\n                  type=\"number\"\n                  id=\"key\"\n                  name=\"key\"\n                  min=\"1\"\n                  max=\"26\"\n                  value={key}\n                  onChange={(e) => setKey(parseInt(e.target.value))}\n                  className=\"w-full p-2 bg-gray-100 border-2 border-gray-400\"\n                />\n              </p>\n              <p className=\"mb-2\">\n                <strong className=\"mr-2\">Font Size:</strong>\n                <label>\n                  <input\n                    checked={textSize === \"text-base\"}\n                    type=\"radio\"\n                    name=\"text-size\"\n                    value=\"text-base\"\n                    onChange={handleFontSize}\n                  />\n                  Normal\n                </label>\n                <label className=\"ml-4\">\n                  <input\n                    checked={textSize === \"text-xl\"}\n                    type=\"radio\"\n                    name=\"text-size\"\n                    value=\"text-xl\"\n                    onChange={handleFontSize}\n                  />\n                  Large\n                </label>\n              </p>\n              <p className=\"mb-4\">\n                <strong className=\"mr-2\">All Caps:</strong>\n                <input\n                  type=\"checkbox\"\n                  id=\"all-caps\"\n                  checked={allCaps}\n                  onChange={handleAllCaps}\n                />\n              </p>\n              <button\n                id=\"encrypt\"\n                onClick={handleEncrypt}\n                className=\"w-1/2 py-2 mb-2 text-white bg-blue-500 hover:bg-blue-700 font-bold\"\n              >\n                Encrypt\n              </button>\n              <button\n                id=\"reset\"\n                onClick={handleReset}\n                className=\"w-1/2 py-2 text-white bg-blue-500 hover:bg-blue-700 font-bold\"\n              >\n                Reset\n              </button>\n            </fieldset>\n          </div>\n          <div className=\"w-full sm:w-1/3 p-5\">\n            <fieldset>\n              <legend className=\"text-xl font-semibold\">\n                Encrypted Message\n              </legend>\n              <div\n                id=\"result\"\n                className={`h-32 p-4 bg-gray-100 border-2 border-gray-400 overflow-auto ${\n                  allCaps ? \"uppercase\" : \"\"\n                } ${textSize}`}\n              >\n                {result}\n              </div>\n            </fieldset>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default MessageEncrypter;","import React, { useRef, useState } from \"react\";\nimport '/src/styles/minesweeper_styles.css';\n\nconst MinesweeperGame = () => {\n  const [message, setMessage] = useState(\"\");\n  const [inputDisabled, setInputDisabled] = useState(false);\n  const [dimensions, setDimensions] = useState({ width: 9, height: 9, mines: 10 });\n  const gridRef = useRef();\n\n  const initializeCell = (row, col) => {\n    const cell = document.createElement(\"div\");\n    cell.classList.add(\"cell\");\n    cell.setAttribute(\"id\", row + \"_\" + col);\n    cell.addEventListener(\"click\", makeMove);\n    cell.addEventListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n      flagCell(e);\n    });\n    return cell;\n  };\n\n  const startGame = () => {\n    const grid = gridRef.current;\n    while (grid.firstChild) {\n      grid.removeChild(grid.lastChild);\n    }\n\n    const rows = dimensions.height;\n    const cols = dimensions.width;\n    const mines = dimensions.mines;\n\n    if (checkInputs(rows, cols, mines)) {\n      setInputDisabled(true);\n      const grid = gridRef.current;\n\n      for (let c = 0; c < cols; c++) {\n        const col = document.createElement(\"div\");\n        col.classList.add(\"row\");\n\n        for (let r = 0; r < rows; r++) {\n          col.appendChild(initializeCell(r, c));\n        }\n        grid.appendChild(col);\n      }\n    }\n\n    randomlyAssignMines();\n  };\n\n  const checkInputs = (nrows, ncols, nmines) => {\n    if (nrows < 1 || ncols < 1 || nrows * ncols <= nmines) {\n      setMessage(\"Please enter a valid number of rows/columns/mines!\");\n      return false;\n    }\n    setMessage(\"\");\n    return true;\n  };\n\n  const randomlyAssignMines = () => {\n    const rows = dimensions.height;\n    const cols = dimensions.width;\n    const mines = dimensions.mines;\n    let coords = [];\n    let rand;\n    let r;\n    let c;\n\n    let assignedMines = 0;\n\n    while (assignedMines < mines) {\n      rand = randomInt(rows * cols - 1);\n      r = rand % rows;\n      c = Math.floor(rand / rows);\n      const idx = r + \"_\" + c;\n\n      if (!coords.includes(idx)) {\n        id(idx).classList.add(\"mine\");\n        coords.push(idx);\n        assignedMines++;\n      }\n    }\n  };\n\n  const calculateNeighborMineCounts = (cellId) => {\n    let count = 0;\n\n    const neighbors = getNeighbors(cellId);\n    neighbors.forEach((neighbor) => {\n      if (id(neighbor).classList.contains(\"mine\")) {\n        count++;\n      }\n    });\n\n    return count;\n  };\n\n  const makeMove = (event) => {\n    const cell = event.currentTarget;\n  \n    if (!cell.classList.contains(\"opened\")) {\n      cell.classList.add(\"opened\");\n  \n      if (!checkGameOver(cell)) {\n        displayNeighbors(cell);\n      } else {\n        setInputDisabled(false);\n      }\n    }\n  };\n\n  const displayNeighbors = (cell) => {\n    cell.classList.add(\"opened\");\n    if (cell.classList.contains(\"flagged\")) {\n      cell.classList.remove(\"flagged\");\n    }\n    const mines = calculateNeighborMineCounts(cell.id);\n  \n    if (mines !== 0) {\n      cell.textContent = mines;\n    } else {\n      setTimeout(() => {\n        for (let neighbor of getNeighbors(cell.id)) {\n          if (!id(neighbor).classList.contains(\"opened\")) {\n            displayNeighbors(id(neighbor));\n          }\n        }\n      }, 200);\n    }\n  };\n\n  const checkGameOver = (cell) => {\n    if (cell.classList.contains(\"mine\")) {\n      cell.classList.add(\"opened\");\n      setMessage(`Game Over!`);\n      return true;\n    } else if (gameWon()) {\n      setMessage(`Victory!`);\n      return true;\n    }\n    return false;\n  };\n\n  const gameWon = () => {\n    return Array.from(gridRef.current.getElementsByClassName(\"cell\")).filter(cell => !cell.classList.contains(\"opened\")).length === dimensions.mines;\n  };\n  \n\n  const flagCell = (event) => {\n    const cell = event.currentTarget;\n    if (!cell.classList.contains(\"opened\")) {\n      if (cell.classList.contains(\"flagged\")) {\n        cell.classList.remove(\"flagged\");\n      } else {\n        cell.classList.add(\"flagged\");\n      }\n    }\n  };\n\n  const getNeighbors = (cellId) => {\n    let ncols = dimensions.width; // ncols = width, nrows = height\n    let nrows = dimensions.height;\n    const cellID = \"\"+cellId;\n    let cellRow = parseInt(cellID.split(\"_\")[0]);\n    let cellCol = parseInt(cellID.split(\"_\")[1]);\n    let neighborIds = [];\n    for (let row = Math.max(cellRow - 1, 0); row <= Math.min(cellRow + 1, nrows - 1); row++) {\n      for (let col = Math.max(cellCol - 1, 0); col <= Math.min(cellCol + 1, ncols - 1); col++) {\n        let neighborId = row + \"_\" + col;\n        neighborIds.push(neighborId);\n      }\n    }\n    return neighborIds;\n  };\n\n  const randomInt = (max) => {\n    // Math.floor causes upperbound to be exclusive\n    return Math.floor(Math.random() * (max + 1));\n  };\n\n  const id = (idName) => {\n    return document.getElementById(idName);\n  };\n\n  return (\n    <div className=\"font-sans bg-gray-100 rounded-md shadow-md\">\n      <header className=\"py-2 text-center\">\n        <h1 className=\"text-xl font-mono font-semibold\">Welcome to Minesweeper!</h1>\n        <h2 className=\"text-sm font-mono\">Left click to uncover, right click to flag.</h2>\n      </header>\n      <hr />\n      <fieldset\n        id=\"menu-options\"\n        className=\"flex flex-wrap justify-center space-x-0 sm:space-x-10 py-1\"\n      >\n        <label className=\"w-1/2 sm:w-1/6 flex flex-col\">\n          Width:{\" \"}\n          <input\n            type=\"number\"\n            id=\"width\"\n            value={dimensions.width}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, width: e.target.value })\n            }\n            disabled={inputDisabled}\n            className=\"py-1\"\n          />\n        </label>\n        <label className=\"w-1/2 sm:w-1/6 flex flex-col\">\n          Height:{\" \"}\n          <input\n            type=\"number\"\n            id=\"height\"\n            value={dimensions.height}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, height: e.target.value })\n            }\n            disabled={inputDisabled}\n            className=\"py-1\"\n          />\n        </label>\n        <label className=\"w-1/2 sm:w-1/6 flex flex-col\">\n          Mines:{\" \"}\n          <input\n            type=\"number\"\n            id=\"mines\"\n            value={dimensions.mines}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, mines: e.target.value })\n            }\n            disabled={inputDisabled}\n            className=\"py-1\"\n          />\n        </label>\n        <button\n          id=\"play\"\n          onClick={startGame}\n          disabled={inputDisabled}\n          className=\"py-1 text-base w-1/2 sm:w-1/6 text-white bg-blue-500 hover:bg-blue-700 font-bold mt-4 sm:mt-0\"\n        >\n          Play\n        </button>\n      </fieldset>\n      <hr />\n      <div id=\"game-container\" className=\"flex flex-col items-center\">\n        <div id=\"grid\" ref={gridRef} className=\"my-12 flex\"></div>\n        <p id=\"result\">{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MinesweeperGame;","import React, { useState } from 'react';\n\nconst WeatherReporter = () => {\n  const ZIP_API_URL = \"http://api.zippopotam.us/us/\";\n  const WEATHER_API_URL = \"http://api.openweathermap.org/data/2.5/weather\";\n  const APPID = \"789ca661d0a0b0e6fd2752420290b325\";\n\n  const [zipcode, setZipcode] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [icon, setIcon] = useState(null);\n  const [temp, setTemp] = useState(\"\");\n  const [windspeed, setWindspeed] = useState(\"\");\n  const [resultTime, setResultTime] = useState(\"\");\n  const [responseVisible, setResponseVisible] = useState(false);\n  const [resultsVisible, setResultsVisible] = useState(false);\n  const [errorVisible, setErrorVisible] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const fetchLocationData = (evt) => {\n    evt.preventDefault();\n\n    if (zipcode === \"\") {\n      handleError(\"No zipcode was given!\");\n      return;\n    }\n\n    fetch(ZIP_API_URL + zipcode)\n      .then(checkStatus)\n      .then(response => response.json())\n      .then(fetchWeatherData)\n      .catch(err => handleError(\"No location data for this zipcode!\"));\n  };\n\n  const fetchWeatherData = (data) => {\n    let firstMatch = data.places[0];\n    const city = firstMatch[\"place name\"];\n    const state = firstMatch.state;\n    const country = data[\"country abbreviation\"];\n\n    const query = `${WEATHER_API_URL}?APPID=${APPID}&units=imperial&q=${city},${state},${country}`;\n    fetch(query)\n      .then(checkStatus)\n      .then(response => response.json())\n      .then(processWeatherData)\n      .catch(err => handleError(\"No weather data for this location!\"));\n  };\n\n  const processWeatherData = (data) => {\n    const city = data.name;\n    setLocation(city);\n    let iconUrl = \"http://openweathermap.org/img/w/\" + data.weather[0].icon + \".png\";\n\n    setIcon(<img src={iconUrl} alt={data.weather[0].main} />);\n\n    const temp = data.main.temp;\n    setTemp(temp);\n\n    const wind = data.wind.speed + \" mph\";\n    setWindspeed(wind);\n\n    const dt = data.dt;\n    setResultTime(Date(dt));\n\n    setResponseVisible(true);\n    setResultsVisible(true);\n    setErrorVisible(false);\n  };\n\n  const handleError = (errMsg) => {\n    setErrorMsg(errMsg);\n    setResponseVisible(true);\n    setResultsVisible(false);\n    setErrorVisible(true);\n  };\n\n  const checkStatus = (response) => {\n    if (!response.ok) {\n      throw Error(\"Error in request: \" + response.statusText);\n    }\n    return response;\n  };\n\n  return (\n    <div className=\"flex flex-col bg-gray-100 rounded-md shadow-md\">\n      <header className=\"text-center py-2\">\n        <h1 className=\"text-xl font-semibold\">Weather Reporter</h1>\n        <h2 className=\"text-sm\">Enter your zip code and find out what the weather is like!</h2>\n      </header>\n      <hr />\n      <main className=\"flex-grow w-full md:w-1/2 place-self-center py-1\">\n        <form id=\"weather\" onSubmit={fetchLocationData} className=\"flex justify-between\">\n          <label>\n            Zipcode: <input type=\"text\" id=\"zipcode\" name=\"zipcode\" value={zipcode} onChange={(e) => setZipcode(e.target.value)} className=\"mx-auto p-1 text-base sm:text-lg\" />\n          </label>\n          <button type=\"submit\" className=\"px-10 py-2 font-bold text-white bg-blue-500 hover:bg-blue-700\">Get Weather</button>\n        </form>\n        {responseVisible && (\n          <article id=\"response\" className={errorVisible ? \"hidden\" : \"\"}>\n            {errorVisible && <p id=\"error\">{errorMsg}</p>}\n            {resultsVisible && (\n              <table id=\"results\" className=\"w-full\">\n                <tbody>\n                  <tr className=\"flex justify-between items-center\">\n                    <th id=\"location\" className=\"text-xl font-bold\">{location}</th>\n                    <th id=\"icon\">{icon}</th>\n                  </tr>\n                  <tr className=\"flex justify-between items-center\">\n                    <td>Temperature:</td>\n                    <td>\n                      <span id=\"temp\">{temp}</span> &deg;F\n                    </td>\n                  </tr>\n                  <tr className=\"flex justify-between items-center\">\n                    <td>Windspeed:</td>\n                    <td id=\"windspeed\">{windspeed}</td>\n                  </tr>\n                </tbody>\n              </table>\n            )}\n            <p id=\"result-time\">{resultTime}</p>\n          </article>\n        )}\n      </main>\n      <footer className=\"text-center text-sm italic\">\n        <hr />\n        <p>\n          Credit: Data from <a href=\"https://zippopotam.us/\" className=\"text-blue-600\">Zippopotam</a> and{\" \"}\n          <a href=\"https://openweathermap.org/\" className=\"text-blue-600\">OpenWeather</a> APIs\n        </p>\n      </footer>\n    </div>\n  );\n};\n\nexport default WeatherReporter;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport MessageEncrypter from '/src/components/messageencrypter';\nimport MinesweeperGame from '/src/components/minesweeper';\nimport WeatherReporter from '/src/components/weatherreporter';\nexport const customCipherCode = `function customCipher(text) {\n  const map = {\n    A: '🍎', B: '🍌', C: '🚗', D: '🐶', E: '⚡️',\n    F: '🌸', G: '⚙️', H: '🏠', I: '♾', J: '🇯🇲',\n    K: '🐨', L: '🦁', M: '🙈', N: '💅', O: '🧡',\n    P: '🏓', Q: '❓', R: '🤖', S: '❄️', T: '🚜',\n    U: '☂️', V: '🧛‍♀️', W: '🌊', X: '❌', Y: '🪀', Z: '🦓'\n  };\n\n  let newText = '';\n  for (let letter of text.toLowerCase()) {\n\n    if (letter >= 'a' && letter <= 'z') {\n      newText += map[letter.toUpperCase()].toLowerCase(); \n    }\n    else if (letter >= 'A' && letter <= 'Z') {\n      newText += map[letter];\n    }\n    else {\n      newText += letter;\n    }\n  }\n\n  return newText;\n}\n`;\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    className: \"font-bold text-lg sm:text-3xl\"\n  }, \" tl;dr \"), \"\\n\", React.createElement(_components.p, null, \"I made some cool applets to learn about JavaScript, React, APIs, and general web development.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"p\", {\n    className: \"font-bold text-lg sm:text-3xl\"\n  }, \" Applet 1: Message Encrypter \"), \"\\n\", React.createElement(MessageEncrypter), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"p\", {\n    className: \"font-bold text-lg sm:text-3xl\"\n  }, \" Applet 2: Minesweeper \"), \"\\n\", React.createElement(MinesweeperGame), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"p\", {\n    className: \"font-bold text-lg sm:text-3xl\"\n  }, \" Applet 3: Weather Reporter \"), \"\\n\", React.createElement(WeatherReporter));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/michael/Desktop/mogonzal/mogonzal-website/projects/cs11_applets/cs11_applets.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../../components/layout';\nconst ProjectPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"div\", {\n    className: \"w-full sm:w-2/3\"\n  }, children));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        thumbnail_alt\n      }\n    }\n  }`;\nexport const Head = ({data}) => React.createElement(\"title\", null, data.mdx.frontmatter.title);\nProjectPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\nimport NavBar from './navbar'\n\nconst Layout = ({ pageTitle, children }) => {\n\n  // React.useEffect(() => {\n  //   console.log(\"hi\");\n  //   console.log(document.getElementById(\"nav\"));\n  //   const navHeight = document.getElementById(\"nav\").offsetHeight;\n  //   const headerHeight = document.getElementById(\"header\").offsetHeight;\n  //   const footerHeight = document.getElementById(\"footer\").offsetHeight;\n  //   const windowHeight = window.innerHeight;\n  //   console.log(\"hi2\");\n\n  //   const main = document.getElementById(\"main\");\n  //   main.style.height = (windowHeight - headerHeight - footerHeight - navHeight) + \"px\";\n  //   console.log(main.style.height);\n  // });\n\n  return (\n    <div className=\"flex flex-col h-screen\">\n      <NavBar pageTitle={pageTitle}/>\n\n      <header id=\"header\" className=\"text-gray-800 py-4 sm:py-6 px-4 sm:px-6 shadow\">\n        <p className=\"text-center text-2xl sm:text-3xl font-bold tracking-tight\">{pageTitle}</p>\n      </header>\n\n      <main id=\"main\" className=\"\">\n        <div className=\"py-4 sm:py-6 px-4 sm:px-6 text-gray-800 flex justify-center\">\n          { children }\n        </div>\n      </main>\n\n      <footer id=\"footer\" className=\"text-gray-400 py-4 px-8 mt-auto\">\n        <p className=\"text-center text-[0.5rem] sm:text-sm\">\n          © {new Date().getFullYear()} Michael Gonzalez. All rights reserved.\n        </p>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["inputText","setInputText","useState","cipherType","setCipherType","key","setKey","textSize","setTextSize","allCaps","setAllCaps","result","setResult","handleFontSize","event","target","value","className","id","placeholder","onChange","e","type","name","min","max","parseInt","checked","onClick","newResult","shiftCipher","customCipher","message","setMessage","inputDisabled","setInputDisabled","dimensions","setDimensions","width","height","mines","gridRef","useRef","initializeCell","row","col","cell","document","createElement","classList","add","setAttribute","addEventListener","makeMove","preventDefault","flagCell","checkInputs","nrows","ncols","nmines","randomlyAssignMines","rows","cols","rand","r","c","coords","assignedMines","randomInt","Math","floor","idx","includes","push","currentTarget","contains","checkGameOver","displayNeighbors","remove","cellId","count","getNeighbors","forEach","neighbor","calculateNeighborMineCounts","textContent","setTimeout","gameWon","Array","from","current","getElementsByClassName","filter","length","cellID","cellRow","split","cellCol","neighborIds","neighborId","random","idName","getElementById","disabled","grid","firstChild","removeChild","lastChild","appendChild","ref","zipcode","setZipcode","location","setLocation","icon","setIcon","temp","setTemp","windspeed","setWindspeed","resultTime","setResultTime","responseVisible","setResponseVisible","resultsVisible","setResultsVisible","errorVisible","setErrorVisible","errorMsg","setErrorMsg","fetchWeatherData","data","firstMatch","places","city","state","country","fetch","WEATHER_API_URL","then","checkStatus","response","json","processWeatherData","catch","err","handleError","iconUrl","weather","src","alt","main","wind","speed","dt","Date","errMsg","ok","Error","statusText","onSubmit","evt","href","_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","MessageEncrypter","MinesweeperGame","WeatherReporter","wrapper","MDXLayout","ProjectPost","_ref","children","Layout","pageTitle","mdx","frontmatter","title","Head","_ref2","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","getFullYear","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}