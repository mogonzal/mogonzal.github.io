{"version":3,"file":"component---src-pages-projects-index-js-86919741d51b66a41aec.js","mappings":"mRA6CA,MArCa,IAAuB,IAAtB,KAAEA,EAAI,OAAEC,GAAQ,EAC5B,MAAMC,GAAYC,EAAAA,EAAAA,GAASH,EAAKI,YAAYF,WACtCG,EAAYJ,EAAS,cAAgB,uBAE3C,OACE,2BACE,uBAAKK,WAAWC,EAAAA,EAAAA,IAAYF,EAAW,6KACrC,gBAAC,KAAI,CAACG,GAAE,aAAeR,EAAKI,YAAYK,MACtC,uBAAKH,UAAU,UACb,gBAAC,EAAAI,EAAW,CACVC,MAAOT,EACPU,IAAKZ,EAAKI,YAAYS,eACtBP,UAAU,6BACVQ,aAAa,MAIjB,uBAAKR,UAAU,kDACb,qBAAGA,UAAU,qEAAqEN,EAAKI,YAAYW,QAGrG,uBAAKT,UAAU,oEACb,gBAAC,IAAe,CAACU,KAAMC,EAAAA,MACvB,uBAAKX,UAAU,kDAEXN,EAAKI,YAAYc,KAAKC,KAAKC,GACzB,gBAAC,IAAG,CAACC,KAAMD,UAOnB,E,SC3BV,MAgHaE,EAAO,IAAM,6BAAO,YAEjC,MAlHqB,IAAe,IAAd,KAAEtB,GAAM,EAC5B,MAAM,EAACuB,EAAW,EAACC,IAAiBC,EAAAA,EAAAA,UAAS,KACvC,EAACC,EAAW,EAACC,IAAiBF,EAAAA,EAAAA,UAAS,IAsBvCG,EAAkBC,KAChBN,EAAWO,OAASJ,EAAWI,YAGjCP,EAAWQ,MAAMC,GAAQH,EAAMzB,YAAYW,MAAMkB,cAAcC,SAASF,EAAIC,oBAG5EP,EAAWK,MAAMX,IAAQe,EAAAA,EAAAA,IAAcf,EAAKS,EAAMzB,YAAYc,SAMpE,OACE,gCACE,gBAAC,IAAM,CAACkB,UAAU,YAChB,uBAAK9B,UAAU,kDACb,uBAAKA,UAAU,iEACb,gBAAC,IAAS,CAAC+B,aAtCIC,IACvBC,QAAQC,IAAIjB,GACZC,EAAcc,EAAEG,OAAOC,MAAMC,MAAM,OAAOC,OAAOC,SAAS,EAoCRC,gBAAgB,mBAC1D,gBAAC,IAAS,CAACT,aAlCCC,IACpBC,QAAQC,IAAIjB,GACZC,EAAcc,EAAEG,OAAOC,MAAMC,MAAM,OAAOC,OAAOC,SAAS,EAgCXC,gBAAgB,mBAGvD9C,EAAK+C,OAAOC,MAAMJ,QAAQf,GAAUD,EAAeC,KAAQV,KAAK8B,GAC9D,gBAAC,EAAI,CAACjD,KAAMiD,EAAMhD,QAAQ,MAI5BD,EAAK+C,OAAOC,MAAMJ,QAAQf,IAAWD,EAAeC,KAAQV,KAAK8B,GAC/D,gBAAC,EAAI,CAACjD,KAAMiD,EAAMhD,QAAQ,MAI5BD,EAAK+C,OAAOC,MAAMJ,QAAQf,GAAUD,EAAeC,KAAQV,KAAK8B,GAC9D,gBAAC,EAAI,CAACjD,KAAMiD,EAAMhD,QAAQ,MAI5BD,EAAK+C,OAAOC,MAAMJ,QAAQf,IAAWD,EAAeC,KAAQV,KAAK8B,GAC/D,gBAAC,EAAI,CAACjD,KAAMiD,EAAMhD,QAAQ,MAI5BD,EAAK+C,OAAOC,MAAMJ,QAAQf,GAAUD,EAAeC,KAAQV,KAAK8B,GAC9D,gBAAC,EAAI,CAACjD,KAAMiD,EAAMhD,QAAQ,MAI5BD,EAAK+C,OAAOC,MAAMJ,QAAQf,IAAWD,EAAeC,KAAQV,KAAK8B,GAC/D,gBAAC,EAAI,CAACjD,KAAMiD,EAAMhD,QAAQ,MAI5BD,EAAK+C,OAAOC,MAAMJ,QAAQf,GAAUD,EAAeC,KAAQV,KAAK8B,GAC9D,gBAAC,EAAI,CAACjD,KAAMiD,EAAMhD,QAAQ,MAI5BD,EAAK+C,OAAOC,MAAMJ,QAAQf,IAAWD,EAAeC,KAAQV,KAAK8B,GAC/D,gBAAC,EAAI,CAACjD,KAAMiD,EAAMhD,QAAQ,QAKjC,C","sources":["webpack://mogonzal-website/./src/components/card.js","webpack://mogonzal-website/./src/pages/projects/index.js"],"sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport Tag from './tag'\nimport { classConcat } from '../misc/utils'\nimport { faTags } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Card = ({ data, active }) => {\n  const thumbnail = getImage(data.frontmatter.thumbnail)\n  const grayscale = active ? \"grayscale-0\" : \"grayscale opacity-50\";\n\n  return (\n    <div>\n      <div className={classConcat(grayscale, \"overflow-hidden rounded-lg bg-gray-100 border-gray-300 border transition ease-in-out shadow-sm hover:shadow-xl hover:-translate-y-2 hover:scale-[1.05] hover:opacity-100\")}>\n        <Link to={`/projects/${data.frontmatter.slug}`}>\n          <div className=\"shadow\">\n            <GatsbyImage\n              image={thumbnail}\n              alt={data.frontmatter.thumnbnail_alt}\n              className=\"h-full w-full object-cover\"\n              imgClassName=\"\"\n            />\n          </div>\n\n          <div className=\"text-gray-800 py-1 sm:py-2 px-1 sm:px-2 shadow\">\n            <p className=\"text-center text-sm sm:text-lg text-wrap font-bold tracking-tight\">{data.frontmatter.title}</p>\n          </div>\n\n          <div className=\"py-1 sm:py-2 px-2 sm:px-4 flex items-center shadow text-gray-800\">\n            <FontAwesomeIcon icon={faTags} />\n            <div className=\"w-full h-full flex flex-wrap items-center pl-2\">\n              {\n                data.frontmatter.tags.map((tag) => (\n                  <Tag text={tag}/>\n                ))\n              }\n            </div>\n          </div>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Card","import * as React from 'react'\nimport { useState } from 'react'\nimport { Link } from 'gatsby'\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { Bars3Icon, BellIcon, XMarkIcon } from '@heroicons/react/24/outline'\nimport Layout from '../../components/layout'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport Card from '../../components/card'\nimport SearchBar from '../../components/searchbar'\nimport TagBar from '../../components/tagbar'\nimport { graphql } from 'gatsby'\nimport { stringInArray } from '../../misc/utils'\nimport { styles } from '../../components/tag'\n\nconst ProjectsPage = ({ data }) => {\n  const [searchKeys, setSearchKeys] = useState([]);\n  const [searchTags, setSearchTags] = useState([]);\n\n  const searchBarChange = (e) => {\n    console.log(searchKeys);\n    setSearchKeys(e.target.value.split(/,| /).filter(Boolean));\n  };\n\n  const tagBarChange = (e) => {\n    console.log(searchKeys);\n    setSearchKeys(e.target.value.split(/,| /).filter(Boolean));\n  };\n\n  // const tagBarChange = (e) => {\n  //   const i = searchTags.indexOf(e);\n  //   if (i == -1) {\n  //     setSearchTags([...searchTags, e]);\n  //   }\n  //   else {\n  //     setSearchTags(searchTags.filter((tag) => tag !== e));\n  //   }\n  // };\n\n  const projectsFilter = (entry) => {\n    if (!(searchKeys.length + searchTags.length)) {\n      return true;\n    }\n    if (searchKeys.some((key) => entry.frontmatter.title.toLowerCase().includes(key.toLowerCase()))) {\n      return true;\n    }\n    if (searchTags.some((tag) => stringInArray(tag, entry.frontmatter.tags))) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <>\n      <Layout pageTitle=\"Projects\">\n        <div className=\"grid grid-cols-2 sm:grid-cols-5 gap-4 sm:gap-6\">\n          <div className=\"col-span-2 sm:col-span-1 sm:row-span-6 space-y-2 sm:space-y-3\">\n            <SearchBar onChangeFunc={searchBarChange} placeholderText=\"search by name\"/>\n            <SearchBar onChangeFunc={tagBarChange} placeholderText=\"search by tag\"/>\n          </div>\n          {\n            data.allMdx.nodes.filter((entry) => projectsFilter(entry)).map((node) => (\n              <Card data={node} active={true}/>\n            ))\n          }\n          { \n            data.allMdx.nodes.filter((entry) => !projectsFilter(entry)).map((node) => (\n              <Card data={node} active={false}/>\n            ))\n          }\n          {\n            data.allMdx.nodes.filter((entry) => projectsFilter(entry)).map((node) => (\n              <Card data={node} active={true}/>\n            ))\n          }\n          { \n            data.allMdx.nodes.filter((entry) => !projectsFilter(entry)).map((node) => (\n              <Card data={node} active={false}/>\n            ))\n          }\n          {\n            data.allMdx.nodes.filter((entry) => projectsFilter(entry)).map((node) => (\n              <Card data={node} active={true}/>\n            ))\n          }\n          { \n            data.allMdx.nodes.filter((entry) => !projectsFilter(entry)).map((node) => (\n              <Card data={node} active={false}/>\n            ))\n          }\n          {\n            data.allMdx.nodes.filter((entry) => projectsFilter(entry)).map((node) => (\n              <Card data={node} active={true}/>\n            ))\n          }\n          { \n            data.allMdx.nodes.filter((entry) => !projectsFilter(entry)).map((node) => (\n              <Card data={node} active={false}/>\n            ))\n          }\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: {frontmatter: {date: DESC}}) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          slug\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n          tags\n          thumbnail_alt\n        }\n        excerpt\n      }\n    }\n  }`\n\nexport const Head = () => <title>Projects</title>\n\nexport default ProjectsPage\n"],"names":["data","active","thumbnail","getImage","frontmatter","grayscale","className","classConcat","to","slug","G","image","alt","thumnbnail_alt","imgClassName","title","icon","faTags","tags","map","tag","text","Head","searchKeys","setSearchKeys","useState","searchTags","setSearchTags","projectsFilter","entry","length","some","key","toLowerCase","includes","stringInArray","pageTitle","onChangeFunc","e","console","log","target","value","split","filter","Boolean","placeholderText","allMdx","nodes","node"],"sourceRoot":""}